{"version":3,"sources":["components/Note.js","services/notes.js","components/notification.js","components/footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","console","log","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"0NAeeA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAY,QACbJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCQ3B,EAfA,WAEX,OADgBK,IAAMC,IAHV,eAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KARV,cAQwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAbJ,cAaI,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCF9BK,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAGP,yBAAKb,UAAW,SACXa,ICSIC,EAfF,WAOX,OACE,yBAAKC,MAPa,CAClBC,MAAO,OACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGCyFOC,EA1FH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAU,MAJlC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGzB,MAAK,SAAA0B,GACJT,EAASS,QAEZ,IAEH,IA2CMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAArC,GAAI,OAAIA,EAAKG,aAE/B,OACG,6BACE,qCACA,kBAAC,EAAD,CAAcc,QAASc,IACvB,6BACA,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QACUA,EAAU,YAAc,QAGlC,4BACGO,EAAYE,KAAI,SAACtC,EAAMuC,GAAP,OACb,kBAAC,EAAD,CACEC,IAAKD,EACLvC,KAAMA,EACNC,iBAAkB,kBA3CH,SAACa,GACjB,sCAAkCA,GAA3C,IACMd,EAAOyB,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,KAChC6B,EAAW,2BAAQ3C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD+B,EACUpB,EAAI6B,GACXlC,MAAK,SAAAmC,GACJlB,EAASD,EAAMa,KAAI,SAAAtC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAO4C,SAEpDC,OAAM,SAAAC,GACLd,EAAgB,aAAD,OACAhC,EAAKK,QADL,0CAGf0C,YAAW,WACTf,EAAgB,QACf,QA2B2BgB,CAAmBhD,EAAKc,WAIxD,0BAAMmC,SAjEM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB/C,QAASsB,EACT0B,MAAM,IAAIC,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,GAC3B3C,GAAIW,EAAMiC,OAAS,GAGrBxB,EACUkB,GACP3C,MAAK,SAAAmC,GACJe,QAAQC,IAAI,eAAehB,GAC3BlB,EAASD,EAAMoC,OAAOjB,IACtBhB,EAAW,SAoDX,2BAAOkC,MAAOnC,EACdoC,SA7BmB,SAACb,GACxBS,QAAQC,IAAIV,EAAMc,OAAOF,OACzBlC,EAAWsB,EAAMc,OAAOF,UA6BpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,QC3FJC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.893d48c8.chunk.js","sourcesContent":["import React from 'react'\r\n// import note from './note.css'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className = 'note'>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes/'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update}","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className ='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n      color: 'blue',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n  \r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Footer","import React, { useState, useEffect } from 'react'\n\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/notification'\nimport Footer from './components/footer'\n\n// to start the json-server acting as a db server: npx json-server --port=3001 --watch db.json\n// to start the node server: npm run dev (win cmd open in the directory)\n// to start the app: npm start\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState (null)\n  \n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  \n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        console.log('returnedNote',returnedNote)\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = (id) =>{\n    const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `the note '${note.content}' was already deleted from the server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  } \n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n  \n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n    \n return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n      <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>    \n      <ul>\n        {notesToShow.map((note, i) => \n            <Note\n              key={i}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n          )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote}\n        onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer /> \n    </div>\n  )\n}\n\nexport default App \n\n\n  // tai hook toisessa järjestyksessä:\n\n  // const hook = () => {\n  //   console.log('effect')\n  //   axios\n  //     .get('http://localhost:3001/notes')\n  //     .then(response => {\n  //       console.log('promise fulfilled')\n  //       setNotes(response.data)\n  //     })\n  // }\n  // useEffect(hook, [])\n  // console.log('render', notes.length, 'notes')\n\n  // useEffect(() => {\n  //   console.log('effect')\n  //   const eventHandler = response => {\n  //     console.log('promise fulfilled')\n  //     setNotes(response.data)\n  //   }\n  //   const promise = axios.get('http://localhost:3001/notes')\n  //   promise.then(eventHandler)\n  // }, [])\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n  ReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  )\n\n\n\n\n"],"sourceRoot":""}